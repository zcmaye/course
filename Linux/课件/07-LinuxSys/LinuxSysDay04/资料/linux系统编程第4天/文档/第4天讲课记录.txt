1 文件权限计算方法: 
	mode & ~umask
2 思考: 阻塞和非阻塞是文件的属性还是read函数的属性?
	通过读普通文件测试得知: read函数在读完文件内容之后, 若再次read,则
	read函数会立刻返回, 表明read函数读普通文件是非阻塞的.
	
	设备文件: /dev/tty   标准输入STDIN_FILENO
	通过读/dev/tty终端设备文件, 表明read函数读设备文件是阻塞的.
	
	结论: 阻塞和非阻塞不是read函数的属性, 而是文件本身的属性.
	socket pipe这两种文件都是阻塞的.
	
	使用st_mode成员判断文件类型:
		    if((sb.st_mode & S_IFMT) ==S_IFLNK)
		    {   
		        printf("连接文件\n");
		    }   
		    

		    if (S_ISREG(sb.st_mode)) 
		    {   
		        printf("普通文件\n");
		    }
 	判断文件权限:
 		    if(sb.st_mode & S_IROTH)
		    {
		        printf("---R----");
		    }

lstat和stat函数:
	1 对于普通文件来说, lstat函数和stat函数一样
	2 对于软连接文件来说, lstat函数获取的是连接文件本身的属性, 
	  stat函数获取的是连接文件指向的文件的属性.		
	      
目录操作:
	1 打开目录 opendir
	2 循环读目录: readdir
	3 关闭目录: closedir
	
dup和dup2函数:
	复制文件描述符----详情看图
	
fcntl函数:
	1 复制文件描述符: int fd = fcntl(oldfd, F_DUPFD, 0);
	2 获得和设置文件的flag属性: 
		int flag = fcntl(fd, F_GETFL, 0);
		flag |= O_APPEND;
		fcntl(fd, F_SETFL, flag);